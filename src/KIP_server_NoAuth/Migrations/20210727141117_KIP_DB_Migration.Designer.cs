// <auto-generated />
using System;
using System.Collections.Generic;
using KIP_Backend.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace KIP_server_NoAuth.Migrations
{
    [DbContext(typeof(KIPDbContext))]
    [Migration("20210727141117_KIP_DB_Migration")]
    partial class KIP_DB_Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

            modelBuilder.Entity("KIP_Backend.Models.KIP.Audience", b =>
                {
                    b.Property<int>("AudienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("AudienceName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BuildingId")
                        .HasColumnType("integer");

                    b.Property<int?>("NumberOfSeats")
                        .HasColumnType("integer");

                    b.Property<List<bool>>("ScheduleIsPresent")
                        .HasColumnType("boolean[]");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("AudienceId");

                    b.HasIndex("AudienceId")
                        .IsUnique();

                    b.HasIndex("BuildingId");

                    b.ToTable("Audience");
                });

            modelBuilder.Entity("KIP_Backend.Models.KIP.AudienceSchedule", b =>
                {
                    b.Property<int>("AudienceScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("AudienceId")
                        .HasColumnType("integer");

                    b.Property<int>("BuildingId")
                        .HasColumnType("integer");

                    b.Property<int>("Day")
                        .HasColumnType("integer");

                    b.Property<List<Nullable<int>>>("GroupId")
                        .HasColumnType("integer[]");

                    b.Property<string>("GroupNames")
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int?>("ProfId")
                        .HasColumnType("integer");

                    b.Property<string>("ProfName")
                        .HasColumnType("text");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Week")
                        .HasColumnType("integer");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("AudienceScheduleId");

                    b.HasIndex("AudienceId");

                    b.HasIndex("BuildingId");

                    b.HasIndex("ProfId");

                    b.HasIndex("AudienceId", "Day");

                    b.ToTable("AudienceSchedule");
                });

            modelBuilder.Entity("KIP_Backend.Models.KIP.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BuildingShortName")
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("NumberOfAudiences")
                        .HasColumnType("integer");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("BuildingId");

                    b.HasIndex("BuildingId")
                        .IsUnique();

                    b.ToTable("Building");
                });

            modelBuilder.Entity("KIP_Backend.Models.KIP.Cathedra", b =>
                {
                    b.Property<int>("CathedraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("CathedraName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CathedraShortName")
                        .HasColumnType("varchar(7)");

                    b.Property<int>("FacultyId")
                        .HasColumnType("integer");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("CathedraId");

                    b.HasIndex("CathedraId")
                        .IsUnique();

                    b.HasIndex("FacultyId");

                    b.ToTable("Cathedra");
                });

            modelBuilder.Entity("KIP_Backend.Models.KIP.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FacultyShortName")
                        .HasColumnType("varchar(7)");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("FacultyId");

                    b.HasIndex("FacultyId")
                        .IsUnique();

                    b.ToTable("Faculty");
                });

            modelBuilder.Entity("KIP_Backend.Models.KIP.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("Course")
                        .HasColumnType("integer");

                    b.Property<int>("FacultyId")
                        .HasColumnType("integer");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<List<bool>>("ScheduleIsPresent")
                        .HasColumnType("boolean[]");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("GroupId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.ToTable("Group");
                });

            modelBuilder.Entity("KIP_Backend.Models.KIP.Prof", b =>
                {
                    b.Property<int>("ProfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("CathedraId")
                        .HasColumnType("integer");

                    b.Property<string>("ProfName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ProfPatronymic")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ProfSurname")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<List<bool>>("ScheduleIsPresent")
                        .HasColumnType("boolean[]");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("ProfId");

                    b.HasIndex("CathedraId");

                    b.HasIndex("ProfId")
                        .IsUnique();

                    b.ToTable("Prof");
                });

            modelBuilder.Entity("KIP_Backend.Models.KIP.ProfSchedule", b =>
                {
                    b.Property<int>("ProfScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int?>("AudienceId")
                        .HasColumnType("integer");

                    b.Property<string>("AudienceName")
                        .HasColumnType("text");

                    b.Property<int?>("BuildingId")
                        .HasColumnType("integer");

                    b.Property<int>("Day")
                        .HasColumnType("integer");

                    b.Property<List<Nullable<int>>>("GroupId")
                        .HasColumnType("integer[]");

                    b.Property<string>("GroupNames")
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int>("ProfId")
                        .HasColumnType("integer");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Week")
                        .HasColumnType("integer");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("ProfScheduleId");

                    b.HasIndex("AudienceId");

                    b.HasIndex("BuildingId");

                    b.HasIndex("ProfId");

                    b.HasIndex("ProfId", "Day");

                    b.ToTable("ProfSchedule");
                });

            modelBuilder.Entity("KIP_Backend.Models.KIP.StudentSchedule", b =>
                {
                    b.Property<int>("StudentScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int?>("AudienceId")
                        .HasColumnType("integer");

                    b.Property<string>("AudienceName")
                        .HasColumnType("text");

                    b.Property<int?>("BuildingId")
                        .HasColumnType("integer");

                    b.Property<int>("Day")
                        .HasColumnType("integer");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int?>("ProfId")
                        .HasColumnType("integer");

                    b.Property<string>("ProfName")
                        .HasColumnType("text");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Week")
                        .HasColumnType("integer");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("StudentScheduleId");

                    b.HasIndex("AudienceId");

                    b.HasIndex("BuildingId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProfId");

                    b.HasIndex("GroupId", "Day");

                    b.ToTable("StudentSchedule");
                });

            modelBuilder.Entity("KIP_Backend.Models.UI.TelegramUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int?>("Course")
                        .HasColumnType("integer");

                    b.Property<string>("Faculty")
                        .HasColumnType("text");

                    b.Property<string>("Group")
                        .HasColumnType("text");

                    b.Property<int?>("TempAudienceValue")
                        .HasColumnType("integer");

                    b.Property<int?>("TempBuildingValue")
                        .HasColumnType("integer");

                    b.Property<int?>("TempDayValue")
                        .HasColumnType("integer");

                    b.Property<int?>("TempProfValue")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("UserId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KIP_Backend.Models.KIP.Audience", b =>
                {
                    b.HasOne("KIP_Backend.Models.KIP.Building", null)
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KIP_Backend.Models.KIP.AudienceSchedule", b =>
                {
                    b.HasOne("KIP_Backend.Models.KIP.Audience", null)
                        .WithMany()
                        .HasForeignKey("AudienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KIP_Backend.Models.KIP.Building", null)
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KIP_Backend.Models.KIP.Prof", null)
                        .WithMany()
                        .HasForeignKey("ProfId");
                });

            modelBuilder.Entity("KIP_Backend.Models.KIP.Cathedra", b =>
                {
                    b.HasOne("KIP_Backend.Models.KIP.Faculty", null)
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KIP_Backend.Models.KIP.Group", b =>
                {
                    b.HasOne("KIP_Backend.Models.KIP.Faculty", null)
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KIP_Backend.Models.KIP.Prof", b =>
                {
                    b.HasOne("KIP_Backend.Models.KIP.Cathedra", null)
                        .WithMany()
                        .HasForeignKey("CathedraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KIP_Backend.Models.KIP.ProfSchedule", b =>
                {
                    b.HasOne("KIP_Backend.Models.KIP.Audience", null)
                        .WithMany()
                        .HasForeignKey("AudienceId");

                    b.HasOne("KIP_Backend.Models.KIP.Building", null)
                        .WithMany()
                        .HasForeignKey("BuildingId");

                    b.HasOne("KIP_Backend.Models.KIP.Prof", null)
                        .WithMany()
                        .HasForeignKey("ProfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KIP_Backend.Models.KIP.StudentSchedule", b =>
                {
                    b.HasOne("KIP_Backend.Models.KIP.Audience", null)
                        .WithMany()
                        .HasForeignKey("AudienceId");

                    b.HasOne("KIP_Backend.Models.KIP.Building", null)
                        .WithMany()
                        .HasForeignKey("BuildingId");

                    b.HasOne("KIP_Backend.Models.KIP.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KIP_Backend.Models.KIP.Prof", null)
                        .WithMany()
                        .HasForeignKey("ProfId");
                });
#pragma warning restore 612, 618
        }
    }
}
